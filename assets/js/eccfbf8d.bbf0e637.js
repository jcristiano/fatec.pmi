"use strict";(self.webpackChunkfatec_pmi=self.webpackChunkfatec_pmi||[]).push([[3203],{3905:(e,o,t)=>{t.d(o,{Zo:()=>m,kt:()=>f});var a=t(7294);function r(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function n(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);o&&(a=a.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?n(Object(t),!0).forEach((function(o){r(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function i(e,o){if(null==e)return{};var t,a,r=function(e,o){if(null==e)return{};var t,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],o.indexOf(t)>=0||(r[t]=e[t]);return r}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),d=function(e){var o=a.useContext(c),t=o;return e&&(t="function"==typeof e?e(o):s(s({},o),e)),t},m=function(e){var o=d(e.components);return a.createElement(c.Provider,{value:o},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var o=e.children;return a.createElement(a.Fragment,{},o)}},l=a.forwardRef((function(e,o){var t=e.components,r=e.mdxType,n=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=d(t),l=r,f=p["".concat(c,".").concat(l)]||p[l]||u[l]||n;return t?a.createElement(f,s(s({ref:o},m),{},{components:t})):a.createElement(f,s({ref:o},m))}));function f(e,o){var t=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var n=t.length,s=new Array(n);s[0]=l;var i={};for(var c in o)hasOwnProperty.call(o,c)&&(i[c]=o[c]);i.originalType=e,i[p]="string"==typeof e?e:r,s[1]=i;for(var d=2;d<n;d++)s[d]=t[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}l.displayName="MDXCreateElement"},74:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var a=t(7462),r=(t(7294),t(3905));const n={id:"csharp-conceitos-metodos",title:"M\xe9todos",sidebar_position:100},s="M\xe9todos no ambito de C",i={unversionedId:"csharp/001b-sobre-a-linguagem-csharp/csharp-conceitos-metodos",id:"csharp/001b-sobre-a-linguagem-csharp/csharp-conceitos-metodos",title:"M\xe9todos",description:"Um m\xe9todo \xe9 um bloco de c\xf3digo que cont\xe9m uma s\xe9rie de instru\xe7\xf5es. Um programa faz com que as instru\xe7\xf5es sejam executadas chamando o m\xe9todo e especificando os argumentos de m\xe9todo necess\xe1rios. No C#, todas as instru\xe7\xf5es executadas s\xe3o realizadas no contexto de um m\xe9todo. O m\xe9todo Main \xe9 o ponto de entrada para todos os aplicativos C# e \xe9 chamado pelo CLR (Common Language Runtime) quando o programa \xe9 iniciado.",source:"@site/docs/csharp/001b-sobre-a-linguagem-csharp/metodos_csharp.md",sourceDirName:"csharp/001b-sobre-a-linguagem-csharp",slug:"/csharp/001b-sobre-a-linguagem-csharp/csharp-conceitos-metodos",permalink:"/fatec.pmi/docs/csharp/001b-sobre-a-linguagem-csharp/csharp-conceitos-metodos",draft:!1,editUrl:"https://github.com/jcristiano/fatec.pmi/tree/main/docs/csharp/001b-sobre-a-linguagem-csharp/metodos_csharp.md",tags:[],version:"current",lastUpdatedAt:1695859219,formattedLastUpdatedAt:"Sep 28, 2023",sidebarPosition:100,frontMatter:{id:"csharp-conceitos-metodos",title:"M\xe9todos",sidebar_position:100},sidebar:"csharpSidebar",previous:{title:"Vari\xe1veis",permalink:"/fatec.pmi/docs/csharp/001b-sobre-a-linguagem-csharp/csharp-conceitos-variaveis-abordagem"},next:{title:"Windows Forms",permalink:"/fatec.pmi/docs/category/windows-forms"}},c={},d=[{value:"Assinaturas de m\xe9todo",id:"assinaturas-de-m\xe9todo",level:2}],m={toc:d},p="wrapper";function u(e){let{components:o,...t}=e;return(0,r.kt)(p,(0,a.Z)({},m,t,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"m\xe9todos-no-ambito-de-c"},"M\xe9todos no ambito de C#"),(0,r.kt)("p",null,"Um m\xe9todo \xe9 um bloco de c\xf3digo que cont\xe9m uma s\xe9rie de instru\xe7\xf5es. Um programa faz com que as instru\xe7\xf5es sejam executadas chamando o m\xe9todo e especificando os argumentos de m\xe9todo necess\xe1rios. No C#, todas as instru\xe7\xf5es executadas s\xe3o realizadas no contexto de um m\xe9todo. O m\xe9todo Main \xe9 o ponto de entrada para todos os aplicativos C# e \xe9 chamado pelo CLR (Common Language Runtime) quando o programa \xe9 iniciado."),(0,r.kt)("h2",{id:"assinaturas-de-m\xe9todo"},"Assinaturas de m\xe9todo"),(0,r.kt)("p",null,"Os m\xe9todos s\xe3o declarados em class, record ou struct especificando:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Um n\xedvel de acesso opcional, como public ou private. O padr\xe3o \xe9 private."),(0,r.kt)("li",{parentName:"ul"},"Modificadores opcionais como abstract ou sealed."),(0,r.kt)("li",{parentName:"ul"},"O valor retornado ou void se o m\xe9todo n\xe3o tiver nenhum."),(0,r.kt)("li",{parentName:"ul"},"O nome do m\xe9todo."),(0,r.kt)("li",{parentName:"ul"},"Quaisquer par\xe2metros de m\xe9todo. Os par\xe2metros de m\xe9todo est\xe3o entre par\xeanteses e separados por v\xedrgulas. Par\xeanteses vazios indicam que o m\xe9todo n\xe3o requer par\xe2metros.")))}u.isMDXComponent=!0}}]);